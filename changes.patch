diff --git a/src/app/app.component.html b/src/app/app.component.html
index 6a1431f..7be3eb9 100644
--- a/src/app/app.component.html
+++ b/src/app/app.component.html
@@ -1,7 +1,18 @@
 
-Mandatory features (all cars listed below have them, so we can eliminate them from the scoreboard):
-Digital Cockpit
-<input type="number" [formControl]="someField">
+<div class="description-container">
+  <span>Mandatory features (all cars listed below have them, so we can eliminate them from the scoreboard):</span> 
+  <ul>
+    <li>Digital Cockpit</li>
+    <li>At least 190HP(PS)</li>
+    <li>Either LED or Matrix LED headlights</li>
+    <!-- TODO badge -->
+    <li>NOT white or red color</li> 
+    <li>Below 10000km</li>
+  </ul>
+</div>
+
+<app-ranking-configuration-form class="ml-20 mr-20"></app-ranking-configuration-form>
+
 <div *ngIf="featurePoinsGetterMap$ | async as featurePoinsGetterMap" class="table-container">
   <table mat-table [dataSource]="dataSource" matSort class="mat-elevation-z8 cars-table">
     <ng-container matColumnDef="score">
@@ -115,7 +126,7 @@ Digital Cockpit
 
 
   <ng-template #featureScoreTemplate let-featureName let-car="car">
-    <span *ngIf="featurePoinsGetterMap[featureName](car) as featureScore"
+    <span *ngIf="$any(featurePoinsGetterMap)[featureName](car) as featureScore"
       [ngStyle]="{ color: featureScore > 0 ? 'green' : featureScore < 0 ? 'red' : 'yellow' }">
       ({{ featureScore >= 0 ? '+' : '-' }}{{ featureScore }} points)
     </span> 
diff --git a/src/app/app.component.scss b/src/app/app.component.scss
index 1f84ab5..316350b 100644
--- a/src/app/app.component.scss
+++ b/src/app/app.component.scss
@@ -1,3 +1,7 @@
+.description-container {
+    margin: 20px 20px;
+}
+
 .table-container {
     margin-top: 20px;
     display: flex;
diff --git a/src/app/app.component.ts b/src/app/app.component.ts
index 49e67b4..bb42260 100644
--- a/src/app/app.component.ts
+++ b/src/app/app.component.ts
@@ -1,8 +1,9 @@
+import { combineLatest, map, Observable, of, shareReplay, Subject, takeUntil } from 'rxjs';
 import { AfterViewInit, ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';
 import { FormControl } from '@angular/forms';
 import { MatSort } from '@angular/material/sort';
 import { MatTableDataSource } from '@angular/material/table';
-import { combineLatest, map, Observable, of, shareReplay, Subject, takeUntil, tap } from 'rxjs';
+
 import { A5FeaturePointsGetterMap, buildFeaturePointsGetterMap } from './audi-feature-ranking';
 import {
   A5,
@@ -11,6 +12,7 @@ import {
   A5_HEADLIGHTS,
   ScoredA5,
 } from './audi.types';
+import { createValueStream } from './utils/forms.utils';
 
 const mockCars: A5[] = [
   {
@@ -65,16 +67,15 @@ export class AppComponent implements AfterViewInit, OnDestroy {
 
   destroy$ = new Subject<boolean>();
 
-  someField = new FormControl();
+  someField = new FormControl(1);
 
   dataSource = new MatTableDataSource<ScoredA5>([]);
 
   cars$: Observable<A5[]> = of(mockCars);
 
-  featurePoinsGetterMap$ = this.someField.valueChanges.pipe(
+  featurePoinsGetterMap$ = createValueStream<number>(this.someField).pipe(
     map(buildFeaturePointsGetterMap),
     shareReplay({refCount: true, bufferSize: 1}),
-    tap(console.log)
   );
 
   scoredCars$: Observable<ScoredA5[]> = combineLatest([
diff --git a/src/app/app.module.ts b/src/app/app.module.ts
index ac972a8..e6ba9bf 100644
--- a/src/app/app.module.ts
+++ b/src/app/app.module.ts
@@ -6,6 +6,7 @@ import { MatTableModule } from '@angular/material/table';
 import { MatSortModule } from '@angular/material/sort';
 
 import { AppComponent } from './app.component';
+import { RankingConfigurationFormModule } from './ranking-configuration-form';
 
 @NgModule({
   declarations: [AppComponent],
@@ -15,6 +16,7 @@ import { AppComponent } from './app.component';
     ReactiveFormsModule,
     MatTableModule,
     MatSortModule,
+    RankingConfigurationFormModule,
   ],
   providers: [],
   bootstrap: [AppComponent],
diff --git a/src/app/ranking-configuration-form/index.ts b/src/app/ranking-configuration-form/index.ts
new file mode 100644
index 0000000..6878916
--- /dev/null
+++ b/src/app/ranking-configuration-form/index.ts
@@ -0,0 +1,2 @@
+export { RankingConfigurationFormComponent } from './ranking-configuration-form.component';
+export { RankingConfigurationFormModule } from './ranking-configuration-form.module';
diff --git a/src/app/ranking-configuration-form/ranking-configuration-form.component.html b/src/app/ranking-configuration-form/ranking-configuration-form.component.html
new file mode 100644
index 0000000..381712a
--- /dev/null
+++ b/src/app/ranking-configuration-form/ranking-configuration-form.component.html
@@ -0,0 +1,134 @@
+<form>
+
+  <mat-list>
+    <div mat-subheader>Config</div>
+    <mat-list-item>
+      <mat-icon mat-list-icon>euro</mat-icon>
+      <!-- TODO: info tooltip of how its calculated -->
+      <div mat-line>
+        <span>My perfect price is: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <mat-label>Amount</mat-label>
+          <input matInput type="number" placeholder="0">
+          <span matSuffix>â‚¬&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>drive_eta</mat-icon>
+      <div mat-line>
+        <span>To S Line trim level I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>filter_4</mat-icon>
+      <div mat-line>
+        <span>To Quattro models I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>sports</mat-icon>
+      <div mat-line>
+        <span>To TDI engines I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5 mr-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+        <span>. To TFSI engines I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>videocam</mat-icon>
+      <div mat-line>
+        <span>To models with a reverse camera I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>add_road</mat-icon>
+      <!-- TODO: info tooltip of how its calculated -->
+      <div mat-line>
+        <span>My perfect current KM is: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <mat-label>Amount</mat-label>
+          <input matInput type="number" placeholder="0">
+          <span matSuffix>km&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>highlight</mat-icon>
+      <div mat-line>
+        <span>To LED headlights I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5 mr-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+        <span>. To Matrix LED headlights I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>wb_incandescent</mat-icon>
+      <div mat-line>
+        <span>To Standart (cup holder) interior ambient lighting I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5 mr-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+        <span>. To full ambient lighting I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+    <mat-list-item>
+      <mat-icon mat-list-icon>swipe</mat-icon>
+      <div mat-line>
+        <span>To models with paddle shifters I award: </span>
+        <mat-form-field appearance="standard" floatLabel="always" class="ml-5">
+          <!-- <mat-label>Points</mat-label> -->
+          <input matInput type="number" placeholder="0">
+          <span matSuffix class="ml-5">points&nbsp;</span>
+        </mat-form-field>
+      </div>
+    </mat-list-item>
+
+  </mat-list>
+</form>
\ No newline at end of file
diff --git a/src/app/ranking-configuration-form/ranking-configuration-form.component.scss b/src/app/ranking-configuration-form/ranking-configuration-form.component.scss
new file mode 100644
index 0000000..f09d325
--- /dev/null
+++ b/src/app/ranking-configuration-form/ranking-configuration-form.component.scss
@@ -0,0 +1,3 @@
+:host {
+    display: block;
+}
\ No newline at end of file
diff --git a/src/app/ranking-configuration-form/ranking-configuration-form.component.ts b/src/app/ranking-configuration-form/ranking-configuration-form.component.ts
new file mode 100644
index 0000000..0d76a79
--- /dev/null
+++ b/src/app/ranking-configuration-form/ranking-configuration-form.component.ts
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'app-ranking-configuration-form',
+  templateUrl: './ranking-configuration-form.component.html',
+  styleUrls: ['./ranking-configuration-form.component.scss']
+})
+export class RankingConfigurationFormComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
diff --git a/src/app/ranking-configuration-form/ranking-configuration-form.module.ts b/src/app/ranking-configuration-form/ranking-configuration-form.module.ts
new file mode 100644
index 0000000..7a364ae
--- /dev/null
+++ b/src/app/ranking-configuration-form/ranking-configuration-form.module.ts
@@ -0,0 +1,24 @@
+import { NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+import { ReactiveFormsModule } from '@angular/forms';
+
+import { MatInputModule } from '@angular/material/input';
+import { MatFormFieldModule } from '@angular/material/form-field';
+import { MatListModule } from '@angular/material/list';
+import { MatIconModule } from '@angular/material/icon';
+
+import { RankingConfigurationFormComponent } from './ranking-configuration-form.component';
+
+@NgModule({
+  imports: [
+    CommonModule,
+    ReactiveFormsModule,
+    MatFormFieldModule,
+    MatInputModule,
+    MatListModule,
+    MatIconModule
+  ],
+  declarations: [RankingConfigurationFormComponent],
+  exports: [RankingConfigurationFormComponent]
+})
+export class RankingConfigurationFormModule { }
diff --git a/src/app/utils/forms.utils.ts b/src/app/utils/forms.utils.ts
new file mode 100644
index 0000000..3bcd71a
--- /dev/null
+++ b/src/app/utils/forms.utils.ts
@@ -0,0 +1,11 @@
+import { defer, Observable, shareReplay, startWith } from 'rxjs';
+import { AbstractControl } from '@angular/forms';
+
+export function createValueStream<T>(control: AbstractControl): Observable<T> {
+  return defer(() =>
+    control.valueChanges.pipe(
+      startWith(control.value),
+      shareReplay({ bufferSize: 1, refCount: true })
+    )
+  );
+}
diff --git a/src/styles.scss b/src/styles.scss
index 7e7239a..f2a1a22 100644
--- a/src/styles.scss
+++ b/src/styles.scss
@@ -2,3 +2,31 @@
 
 html, body { height: 100%; }
 body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
+ul { margin: 0 0 }
+
+// space generation variables
+$spaceamounts: (0, 5, 10, 15, 20, 25, 30, 35, 40, 45,
+  50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100); // Adjust this to include the pixel amounts you need.
+$sides: (top, bottom, left, right); // all positions 
+
+@each $space in $spaceamounts {
+  @each $side in $sides {
+    .m#{str-slice($side, 0, 1)}-#{$space} {
+      margin-#{$side}: #{$space}px !important;
+    }
+
+    .p#{str-slice($side, 0, 1)}-#{$space} {
+      padding-#{$side}: #{$space}px !important;
+    }
+  }
+}
+
+@each $space in $spaceamounts {
+  .m-#{$space} {
+    margin: #{$space}px !important;
+  }
+
+  .p-#{$space} {
+    padding: #{$space}px !important;
+  }
+}
diff --git a/tsconfig.json b/tsconfig.json
index f531992..c4e4ab8 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -27,6 +27,6 @@
     "enableI18nLegacyMessageIdFormat": false,
     "strictInjectionParameters": true,
     "strictInputAccessModifiers": true,
-    "strictTemplates": true
+    "strictTemplates": true,
   }
 }
